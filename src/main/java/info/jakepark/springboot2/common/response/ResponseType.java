package info.jakepark.springboot2.common.response;

import lombok.Getter;
import org.springframework.http.HttpStatus;

import java.util.Arrays;

@Getter
public enum ResponseType {

    //------------------------------------------------------------------------------------
    // [ 0000 ] common success
    //------------------------------------------------------------------------------------
    OK("0000", HttpStatus.OK, "request.success"),
    OK_BUT_NO_CONTENT("0010", HttpStatus.NO_CONTENT, "request.noContent"),

    //------------------------------------------------------------------------------------
    // [ 1000 ~ 1999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 2000 ~ 2999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 3000 ~ 3999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 4000 ~ 4999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 5000 ~ 5999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 6000 ~ 6999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 7000 ~ 7999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 8000 ~ 8999 ]
    //------------------------------------------------------------------------------------

    //------------------------------------------------------------------------------------
    // [ 9000 ~ 9999 ] common error
    //------------------------------------------------------------------------------------
    BAD_REQUEST("9000", HttpStatus.BAD_REQUEST, "request.badRequest"),
    BAD_REQUEST_METHOD("9001", HttpStatus.BAD_REQUEST, "response.badRequest.method"),
    NOT_FOUND("9010", HttpStatus.NOT_FOUND, "request.not.found"),
    INTERNAL_SERVER_ERROR("9999", HttpStatus.INTERNAL_SERVER_ERROR, "internal.server.error"),
    ;

    private final String code;
    private final HttpStatus httpStatus;
    private final String message;

    ResponseType(String code, HttpStatus httpStatus) {
        this(code, httpStatus, null);
    }

    ResponseType(String code, HttpStatus httpStatus, String message) {
        this.code = code;
        this.httpStatus = httpStatus;
        this.message = message;
    }

    public static ResponseType of(String code) {
        return Arrays.stream(ResponseType.values())
                .filter(v -> v.getCode().equals(code))
                .findFirst()
                .orElseThrow(IllegalArgumentException::new);
    }
}
