plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.7.RELEASE'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

group = 'info.jake-park'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}
//
//configurations.all {
//    resolutionStrategy.force 'com.google.guava:guava:20.0'
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.7.RELEASE'

    implementation 'net.logstash.logback:logstash-logback-encoder:5.3'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    // querydsl
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-collections'

    // apache
    implementation 'org.apache.commons:commons-lang3'
    implementation 'commons-validator:commons-validator:1.6'

    // gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // swagger
    implementation 'io.springfox:springfox-swagger2:3.0.0-SNAPSHOT'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT'
    implementation 'io.springfox:springfox-bean-validators:3.0.0-SNAPSHOT'
    implementation 'io.springfox:springfox-spring-webmvc:3.0.0-SNAPSHOT'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'com.querydsl:querydsl-apt:4.2.1:jpa'
    annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
}

def queryDslOutput = "out/production/classes/generated"
sourceSets { main.java.srcDirs += [queryDslOutput] }
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(queryDslOutput)
}
clean.doLast { file(queryDslOutput).deleteDir() }